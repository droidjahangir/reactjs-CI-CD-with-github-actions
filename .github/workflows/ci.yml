name: CI

on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout/@v3

      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install NodeJs
        uses: actions/setup-node/@v3
        with:
          node-version: "latest"

        # install dependancy if cache node_module doesn't found
      - name: install dependancy
        run: npm install

      - name: List the state of node modules
        continue-on-error: true
        run: npm list

      # - run: npm run format
      - run: npm run format:check

      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact/@v3
        with:
          name: code-coverage
          path: coverage

      - name: Build project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact/@v3
        with:
          name: build
          path: build

      - name: Create a Release
        # check event and branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Deploy to staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain lively-pig.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
